- name: yum update
  yum: name=* state=latest
  when: ansible_os_family == 'RedHat'
- name: install ovs dependent package(rhep)
  yum: name={{item}} state=installed
  with_items:
    - gcc
    - make
    - python-devel
    - openssl-devel
    - kernel-devel
    - graphviz
    - kernel-debug-devel
    - autoconf
    - automake
    - rpm-build
    - redhat-rpm-config
    - libtool
  when: ansible_os_family == 'RedHat'
- name: git clone 
  git: repo=https://github.com/openvswitch/ovs.git dest={{ ovs_dir }} version={{ branch }} update=yes 
  
- name: get ovs-version
  shell: cat {{ ovs_dir }}/configure.ac | grep AC_INIT | cut -d , -f2| sed -e 's/^  *//g'| sed -e 's/  *$//g' > /tmp/ovsver
- command: sed -i -e "s/^/openvswitch-/g" /tmp/ovsver
- command: cat /tmp/ovsver
  register: version_ovs
  
- name: run boot.sh
  command: ./boot.sh chdir={{ ovs_dir }}
- name: run configure
  command: ./configure chdir={{ ovs_dir }}
- name: make dist
  command: make dist chdir={{ ovs_dir }}
- name: create dir rpmbuild
  file: path={{ work_dir }}/rpmbuild/{{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - BUILD
    - BUILDROOT
    - RPMS
    - SOURCES
    - SPECS
    - SRPMS
#- name: copy ovs tarball
#  copy: src={{ ovs_dir }}/*.tar.gz dest={{ work_dir }}/rpmbuild/SOURCES
- name: copy ovs tarball
  command: cp {{ ovs_dir }}/{{ version_ovs.stdout }}.tar.gz {{ work_dir }}/rpmbuild/SOURCES 
- name: tar ovs tarball
  command: tar -zxf {{ work_dir }}/rpmbuild/SOURCES/{{ version_ovs.stdout }}.tar.gz -C {{ work_dir }}/rpmbuild/SOURCES/
- name: rpmbuild ovs
  command: rpmbuild -bb rhel/openvswitch.spec chdir={{ work_dir }}/rpmbuild/SOURCES/{{ version_ovs.stdout }}

- name: install ovs rpm
  yum: name={{ work_dir }}/rpmbuild/RPMS/x86_64/{{ version_ovs.stdout }}-1.x86_64.rpm

- name: ovs servise enable
  service: name=openvswitch state=started

- name: ovs servise start 
  service: name=openvswitch enabled=yes
